group 'com.liuwill'
version '1.0-SNAPSHOT'

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'jetty'

version = '1.0'

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    /*maven{
        url "http://192.168.10.29:8081/nexus/content/groups/public/"
    }*/
}

def jettyVersion = "9.3.9.M1"

configurations {
    jettyServer
}

dependencies {
    //compile 'ch.qos.logback:logback-classic:1.1.3'
    //compile 'joda-time:joda-time:2.8.2'
    //compile	'org.jodd:jodd-core:3.6.6'
    //compile 'javax.servlet:servlet-api:2.5'
    compile	'org.slf4j:slf4j-api:1.7.13'
    compile	'org.slf4j:slf4j-log4j12:1.7.13'
    compile	'org.slf4j:jcl-over-slf4j:1.7.13'
    compile	'org.slf4j:jul-to-slf4j:1.7.13'


    compile 'javax.servlet:javax.servlet-api:3.1.0'
    compile 'javax.servlet:jstl:1.2'
    compile	'taglibs:standard:1.1.2'
    compile	'javax.servlet.jsp:javax.servlet.jsp-api:2.3.1'

    compile('org.springframework:spring-core:4.1.8.RELEASE') {
        exclude	module:	'commons-logging'
    }
    compile	'org.springframework:spring-beans:4.1.8.RELEASE'
    compile	'org.springframework:spring-context:4.1.8.RELEASE'
    compile	'org.springframework:spring-context-support:4.1.8.RELEASE'
    compile('org.springframework:spring-aop:4.1.8.RELEASE')	{
        exclude	module:	'commons-logging'
    }
    compile	'org.springframework:spring-tx:4.1.8.RELEASE'
    compile	'org.springframework:spring-orm:4.1.8.RELEASE'
    compile	'org.springframework:spring-jdbc:4.1.8.RELEASE'
    compile	'org.springframework:spring-web:4.1.8.RELEASE'
    compile	'org.springframework:spring-webmvc:4.1.8.RELEASE'

    compile	'org.mybatis:mybatis:3.2.8'
    compile	'org.mybatis:mybatis-spring:1.2.3'
    //compile	'com.alibaba:druid:1.0.16'
    compile	'mysql:mysql-connector-java:5.1.37'

    compile	'com.fasterxml.jackson.core:jackson-core:2.6.3'
    compile	'com.fasterxml.jackson.core:jackson-databind:2.6.3'
    compile	'com.fasterxml.jackson.core:jackson-annotations:2.6.3'
    compile 'org.apache.commons:commons-dbcp2:2.1'
    compile 'com.alibaba:fastjson:1.2.6'
    compile	'org.freemarker:freemarker:2.3.23'

    compile	'org.apache.commons:commons-lang3:3.4'

    //compile 'org.eclipse.jetty:jetty-runner:9.3.9.M1'
    jettyServer 'org.eclipse.jetty:jetty-runner:9.3.9.M1'

    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'org.testng', name: 'testng', version: '6.9.8'
    testCompile	'org.springframework:spring-test:4.1.8.RELEASE'
    testCompile 'com.jayway.jsonpath:json-path:2.2.0'
}

def jettyHttpPort = 8090
def jettyContextPath = "/"
def testngConfigPath = 'src/test/resources/testng.xml'

task jettyServerRun(type: JavaExec,dependsOn: build) {
    main = "org.eclipse.jetty.runner.Runner"
    args = ["--port","8090",war.archivePath]
    classpath configurations.jettyServer
}

/*
task jettyServerStop << {
    ant.taskdef(name: 'jettyStop', classname: 'org.eclipse.jetty.ant.JettyStopTask', classpath: configurations.jetty.asPath)
    ant.jettyStop(stopPort: 8090, stopKey: "STOP")
}
*/

jettyRun{
    contextPath = jettyContextPath
    httpPort = jettyHttpPort
}

jettyRunWar{
    contextPath = jettyContextPath
    httpPort = jettyHttpPort
}

test {
    useTestNG{
        suites testngConfigPath
        useDefaultListeners = true
    }
}

task copyJettyJars(type: Copy) {
    from configurations.jettyServer
    into 'build/dist' // 目标位置
}

task stage{
    dependsOn "build","copyJettyJars"
}